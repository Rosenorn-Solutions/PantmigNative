/* tslint:disable */
/* eslint-disable */
/**
 * PantmigService API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
import type { RecycleListingApplicant } from './RecycleListingApplicant';
import {
    RecycleListingApplicantFromJSON,
    RecycleListingApplicantFromJSONTyped,
    RecycleListingApplicantToJSON,
    RecycleListingApplicantToJSONTyped,
} from './RecycleListingApplicant';
import type { City } from './City';
import {
    CityFromJSON,
    CityFromJSONTyped,
    CityToJSON,
    CityToJSONTyped,
} from './City';
import type { ListingStatus } from './ListingStatus';
import {
    ListingStatusFromJSON,
    ListingStatusFromJSONTyped,
    ListingStatusToJSON,
    ListingStatusToJSONTyped,
} from './ListingStatus';

/**
 * 
 * @export
 * @interface RecycleListing
 */
export interface RecycleListing {
    /**
     * 
     * @type {number}
     * @memberof RecycleListing
     */
    id?: number;
    /**
     * 
     * @type {string}
     * @memberof RecycleListing
     */
    title?: string | null;
    /**
     * 
     * @type {string}
     * @memberof RecycleListing
     */
    description?: string | null;
    /**
     * 
     * @type {string}
     * @memberof RecycleListing
     */
    location?: string | null;
    /**
     * 
     * @type {number}
     * @memberof RecycleListing
     */
    estimatedValue?: number | null;
    /**
     * 
     * @type {string}
     * @memberof RecycleListing
     */
    estimatedAmount?: string | null;
    /**
     * 
     * @type {Date}
     * @memberof RecycleListing
     */
    availableFrom?: Date;
    /**
     * 
     * @type {Date}
     * @memberof RecycleListing
     */
    availableTo?: Date;
    /**
     * 
     * @type {Date}
     * @memberof RecycleListing
     */
    createdAt?: Date;
    /**
     * 
     * @type {string}
     * @memberof RecycleListing
     */
    createdByUserId?: string | null;
    /**
     * 
     * @type {boolean}
     * @memberof RecycleListing
     */
    isActive?: boolean;
    /**
     * 
     * @type {number}
     * @memberof RecycleListing
     */
    cityId?: number;
    /**
     * 
     * @type {City}
     * @memberof RecycleListing
     */
    city?: City;
    /**
     * 
     * @type {ListingStatus}
     * @memberof RecycleListing
     */
    status?: ListingStatus;
    /**
     * 
     * @type {string}
     * @memberof RecycleListing
     */
    assignedRecyclerUserId?: string | null;
    /**
     * 
     * @type {Date}
     * @memberof RecycleListing
     */
    acceptedAt?: Date | null;
    /**
     * 
     * @type {Date}
     * @memberof RecycleListing
     */
    pickupConfirmedAt?: Date | null;
    /**
     * 
     * @type {string}
     * @memberof RecycleListing
     */
    chatSessionId?: string | null;
    /**
     * 
     * @type {string}
     * @memberof RecycleListing
     */
    receiptImageUrl?: string | null;
    /**
     * 
     * @type {string}
     * @memberof RecycleListing
     */
    receiptImageBytes?: string | null;
    /**
     * 
     * @type {string}
     * @memberof RecycleListing
     */
    receiptImageContentType?: string | null;
    /**
     * 
     * @type {string}
     * @memberof RecycleListing
     */
    receiptImageFileName?: string | null;
    /**
     * 
     * @type {number}
     * @memberof RecycleListing
     */
    reportedAmount?: number | null;
    /**
     * 
     * @type {number}
     * @memberof RecycleListing
     */
    verifiedAmount?: number | null;
    /**
     * 
     * @type {Date}
     * @memberof RecycleListing
     */
    completedAt?: Date | null;
    /**
     * 
     * @type {number}
     * @memberof RecycleListing
     */
    meetingLatitude?: number | null;
    /**
     * 
     * @type {number}
     * @memberof RecycleListing
     */
    meetingLongitude?: number | null;
    /**
     * 
     * @type {Date}
     * @memberof RecycleListing
     */
    meetingSetAt?: Date | null;
    /**
     * 
     * @type {Array<RecycleListingApplicant>}
     * @memberof RecycleListing
     */
    applicants?: Array<RecycleListingApplicant> | null;
    /**
     * 
     * @type {Array<string>}
     * @memberof RecycleListing
     */
    readonly appliedForRecyclementUserIdList?: Array<string> | null;
}



/**
 * Check if a given object implements the RecycleListing interface.
 */
export function instanceOfRecycleListing(value: object): value is RecycleListing {
    return true;
}

export function RecycleListingFromJSON(json: any): RecycleListing {
    return RecycleListingFromJSONTyped(json, false);
}

export function RecycleListingFromJSONTyped(json: any, ignoreDiscriminator: boolean): RecycleListing {
    if (json == null) {
        return json;
    }
    return {
        
        'id': json['id'] == null ? undefined : json['id'],
        'title': json['title'] == null ? undefined : json['title'],
        'description': json['description'] == null ? undefined : json['description'],
        'location': json['location'] == null ? undefined : json['location'],
        'estimatedValue': json['estimatedValue'] == null ? undefined : json['estimatedValue'],
        'estimatedAmount': json['estimatedAmount'] == null ? undefined : json['estimatedAmount'],
        'availableFrom': json['availableFrom'] == null ? undefined : (new Date(json['availableFrom'])),
        'availableTo': json['availableTo'] == null ? undefined : (new Date(json['availableTo'])),
        'createdAt': json['createdAt'] == null ? undefined : (new Date(json['createdAt'])),
        'createdByUserId': json['createdByUserId'] == null ? undefined : json['createdByUserId'],
        'isActive': json['isActive'] == null ? undefined : json['isActive'],
        'cityId': json['cityId'] == null ? undefined : json['cityId'],
        'city': json['city'] == null ? undefined : CityFromJSON(json['city']),
        'status': json['status'] == null ? undefined : ListingStatusFromJSON(json['status']),
        'assignedRecyclerUserId': json['assignedRecyclerUserId'] == null ? undefined : json['assignedRecyclerUserId'],
        'acceptedAt': json['acceptedAt'] == null ? undefined : (new Date(json['acceptedAt'])),
        'pickupConfirmedAt': json['pickupConfirmedAt'] == null ? undefined : (new Date(json['pickupConfirmedAt'])),
        'chatSessionId': json['chatSessionId'] == null ? undefined : json['chatSessionId'],
        'receiptImageUrl': json['receiptImageUrl'] == null ? undefined : json['receiptImageUrl'],
        'receiptImageBytes': json['receiptImageBytes'] == null ? undefined : json['receiptImageBytes'],
        'receiptImageContentType': json['receiptImageContentType'] == null ? undefined : json['receiptImageContentType'],
        'receiptImageFileName': json['receiptImageFileName'] == null ? undefined : json['receiptImageFileName'],
        'reportedAmount': json['reportedAmount'] == null ? undefined : json['reportedAmount'],
        'verifiedAmount': json['verifiedAmount'] == null ? undefined : json['verifiedAmount'],
        'completedAt': json['completedAt'] == null ? undefined : (new Date(json['completedAt'])),
        'meetingLatitude': json['meetingLatitude'] == null ? undefined : json['meetingLatitude'],
        'meetingLongitude': json['meetingLongitude'] == null ? undefined : json['meetingLongitude'],
        'meetingSetAt': json['meetingSetAt'] == null ? undefined : (new Date(json['meetingSetAt'])),
        'applicants': json['applicants'] == null ? undefined : ((json['applicants'] as Array<any>).map(RecycleListingApplicantFromJSON)),
        'appliedForRecyclementUserIdList': json['appliedForRecyclementUserIdList'] == null ? undefined : json['appliedForRecyclementUserIdList'],
    };
}

export function RecycleListingToJSON(json: any): RecycleListing {
    return RecycleListingToJSONTyped(json, false);
}

export function RecycleListingToJSONTyped(value?: Omit<RecycleListing, 'appliedForRecyclementUserIdList'> | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'id': value['id'],
        'title': value['title'],
        'description': value['description'],
        'location': value['location'],
        'estimatedValue': value['estimatedValue'],
        'estimatedAmount': value['estimatedAmount'],
        'availableFrom': value['availableFrom'] == null ? undefined : ((value['availableFrom']).toISOString()),
        'availableTo': value['availableTo'] == null ? undefined : ((value['availableTo']).toISOString()),
        'createdAt': value['createdAt'] == null ? undefined : ((value['createdAt']).toISOString()),
        'createdByUserId': value['createdByUserId'],
        'isActive': value['isActive'],
        'cityId': value['cityId'],
        'city': CityToJSON(value['city']),
        'status': ListingStatusToJSON(value['status']),
        'assignedRecyclerUserId': value['assignedRecyclerUserId'],
        'acceptedAt': value['acceptedAt'] === null ? null : ((value['acceptedAt'] as any)?.toISOString()),
        'pickupConfirmedAt': value['pickupConfirmedAt'] === null ? null : ((value['pickupConfirmedAt'] as any)?.toISOString()),
        'chatSessionId': value['chatSessionId'],
        'receiptImageUrl': value['receiptImageUrl'],
        'receiptImageBytes': value['receiptImageBytes'],
        'receiptImageContentType': value['receiptImageContentType'],
        'receiptImageFileName': value['receiptImageFileName'],
        'reportedAmount': value['reportedAmount'],
        'verifiedAmount': value['verifiedAmount'],
        'completedAt': value['completedAt'] === null ? null : ((value['completedAt'] as any)?.toISOString()),
        'meetingLatitude': value['meetingLatitude'],
        'meetingLongitude': value['meetingLongitude'],
        'meetingSetAt': value['meetingSetAt'] === null ? null : ((value['meetingSetAt'] as any)?.toISOString()),
        'applicants': value['applicants'] == null ? undefined : ((value['applicants'] as Array<any>).map(RecycleListingApplicantToJSON)),
    };
}

