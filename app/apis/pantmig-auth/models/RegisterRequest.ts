/* tslint:disable */
/* eslint-disable */
/**
 * AuthService API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
import type { Gender } from './Gender';
import {
    GenderFromJSON,
    GenderFromJSONTyped,
    GenderToJSON,
    GenderToJSONTyped,
} from './Gender';
import type { UserType } from './UserType';
import {
    UserTypeFromJSON,
    UserTypeFromJSONTyped,
    UserTypeToJSON,
    UserTypeToJSONTyped,
} from './UserType';

/**
 * 
 * @export
 * @interface RegisterRequest
 */
export interface RegisterRequest {
    /**
     * 
     * @type {string}
     * @memberof RegisterRequest
     */
    email?: string | null;
    /**
     * 
     * @type {string}
     * @memberof RegisterRequest
     */
    password?: string | null;
    /**
     * 
     * @type {string}
     * @memberof RegisterRequest
     */
    firstName?: string | null;
    /**
     * 
     * @type {string}
     * @memberof RegisterRequest
     */
    lastName?: string | null;
    /**
     * 
     * @type {string}
     * @memberof RegisterRequest
     */
    phone?: string | null;
    /**
     * 
     * @type {string}
     * @memberof RegisterRequest
     */
    mitId?: string | null;
    /**
     * 
     * @type {UserType}
     * @memberof RegisterRequest
     */
    userType?: UserType;
    /**
     * 
     * @type {Gender}
     * @memberof RegisterRequest
     */
    gender?: Gender;
    /**
     * 
     * @type {Date}
     * @memberof RegisterRequest
     */
    birthDate?: Date | null;
    /**
     * 
     * @type {string}
     * @memberof RegisterRequest
     */
    city?: string | null;
}



/**
 * Check if a given object implements the RegisterRequest interface.
 */
export function instanceOfRegisterRequest(value: object): value is RegisterRequest {
    return true;
}

export function RegisterRequestFromJSON(json: any): RegisterRequest {
    return RegisterRequestFromJSONTyped(json, false);
}

export function RegisterRequestFromJSONTyped(json: any, ignoreDiscriminator: boolean): RegisterRequest {
    if (json == null) {
        return json;
    }
    return {
        
        'email': json['email'] == null ? undefined : json['email'],
        'password': json['password'] == null ? undefined : json['password'],
        'firstName': json['firstName'] == null ? undefined : json['firstName'],
        'lastName': json['lastName'] == null ? undefined : json['lastName'],
        'phone': json['phone'] == null ? undefined : json['phone'],
        'mitId': json['mitId'] == null ? undefined : json['mitId'],
        'userType': json['userType'] == null ? undefined : UserTypeFromJSON(json['userType']),
        'gender': json['gender'] == null ? undefined : GenderFromJSON(json['gender']),
        'birthDate': json['birthDate'] == null ? undefined : (new Date(json['birthDate'])),
        'city': json['city'] == null ? undefined : json['city'],
    };
}

export function RegisterRequestToJSON(json: any): RegisterRequest {
    return RegisterRequestToJSONTyped(json, false);
}

export function RegisterRequestToJSONTyped(value?: RegisterRequest | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'email': value['email'],
        'password': value['password'],
        'firstName': value['firstName'],
        'lastName': value['lastName'],
        'phone': value['phone'],
        'mitId': value['mitId'],
        'userType': UserTypeToJSON(value['userType']),
        'gender': GenderToJSON(value['gender']),
        'birthDate': value['birthDate'] === null ? null : ((value['birthDate'] as any)?.toISOString().substring(0,10)),
        'city': value['city'],
    };
}

